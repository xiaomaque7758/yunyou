{"remainingRequest":"c:\\Users\\web\\Desktop\\二次修改项目\\yunyou01\\vueui\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\web\\Desktop\\二次修改项目\\yunyou01\\vueui\\src\\main.js","dependencies":[{"path":"c:\\Users\\web\\Desktop\\二次修改项目\\yunyou01\\vueui\\src\\main.js","mtime":1546396916276},{"path":"c:\\Users\\web\\Desktop\\二次修改项目\\yunyou01\\vueui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1546396875761},{"path":"c:\\Users\\web\\Desktop\\二次修改项目\\yunyou01\\vueui\\node_modules\\babel-loader\\lib\\index.js","mtime":1546396872473}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport 'mint-ui/lib/style.css';\nVue.config.productionTip = false; //5: 设置请求的根路径 \n//导入 MUI 的样式表， 和 Bootstrap 用法没有差别\n\nimport './lib/mui/css/mui.css'; // 导入 MUI 的样式表，扩展图标样式，购物车图标\n// 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css'; //0.1:引入Vuex\n\nimport Vuex from \"vuex\"; //0.2:注册Vuex组件\n\nVue.use(Vuex); //0.3:创建Vuex实例对象\n\nvar store = new Vuex.Store({\n  state: {\n    cartCount: 0 //购物车中商品数量\n\n  },\n  mutations: {\n    //修改共享数据方法\n    increment: function increment(state, count) {\n      state.cartCount += count;\n    },\n    substract: function substract(state) {\n      state.cartCount--;\n    },\n    clear: function clear(state) {\n      state.cartCount = 0;\n    }\n  },\n  getters: {\n    //获取共享数据方法\n    optCartCount: function optCartCount(state) {\n      return state.cartCount;\n    }\n  }\n}); //0.4:将Vuex对象注册Vue对象---见最后\n//1:引入mint-ui Header Button组件\n\nimport { Header, Swipe, SwipeItem, Button } from \"mint-ui\"; //2.注册Header组件\n\nVue.component(Header.name, Header); //3:注册Swipe/SwipeItem/Button组件\n\nVue.component(Swipe.name, Swipe);\nVue.component(SwipeItem.name, SwipeItem);\nVue.component(Button.name, Button); //3.1:引入axios库(VueResource)\n\nimport axios from \"axios\"; //3.2:跨域保存session值\n\naxios.defaults.withCredentials = true; //3.3:注册组件\n\nVue.prototype.axios = axios; //4:引入vue-resource 库\n\nimport VueResource from \"vue-resource\"; //5:注册vue-resource 库\n\nVue.use(VueResource); //6:配置vue-resource常见属性\n//6.1:设置请求服务器根目录\n\nVue.http.options.root = \"http://127.0.0.1:3333/\"; //6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\n//将提交数据进行转码操作 \n\nVue.http.options.emulateJSON = true;\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  //渲染     h->创建元素\n  store: store //0.4：将Vuex对象注册到Vue实例\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","config","productionTip","Vuex","use","store","Store","state","cartCount","mutations","increment","count","substract","clear","getters","optCartCount","Header","Swipe","SwipeItem","Button","component","name","axios","defaults","withCredentials","prototype","VueResource","http","options","root","emulateJSON","render","h","$mount"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAM,uBAAN;AAEAF,IAAIG,MAAJ,CAAWC,aAAX,GAA2B,KAA3B,C,CACA;AAGA;;AACA,OAAO,uBAAP,C,CACA;AACA;;AACA,OAAO,+BAAP,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACAL,IAAIM,GAAJ,CAAQD,IAAR,E,CACA;;AACA,IAAIE,QAAM,IAAIF,KAAKG,KAAT,CAAe;AACtBC,SAAM;AACJC,eAAU,CADN,CACS;;AADT,GADgB;AAItBC,aAAU;AAAI;AACZC,aADQ,qBACEH,KADF,EACQI,KADR,EACc;AAACJ,YAAMC,SAAN,IAAiBG,KAAjB;AAAuB,KADtC;AAERC,aAFQ,qBAEEL,KAFF,EAEQ;AAACA,YAAMC,SAAN;AAAkB,KAF3B;AAGRK,SAHQ,iBAGFN,KAHE,EAGI;AAACA,YAAMC,SAAN,GAAgB,CAAhB;AAAkB;AAHvB,GAJY;AAStBM,WAAQ;AAAI;AACVC,kBAAa,sBAASR,KAAT,EAAe;AAC1B,aAAOA,MAAMC,SAAb;AACD;AAHK;AATc,CAAf,CAAV,C,CAeA;AAIA;;AACA,SAAQQ,MAAR,EAAeC,KAAf,EAAqBC,SAArB,EAA+BC,MAA/B,QAA4C,SAA5C,C,CACA;;AACArB,IAAIsB,SAAJ,CAAcJ,OAAOK,IAArB,EAA0BL,MAA1B,E,CACA;;AACAlB,IAAIsB,SAAJ,CAAcH,MAAMI,IAApB,EAAyBJ,KAAzB;AACAnB,IAAIsB,SAAJ,CAAcF,UAAUG,IAAxB,EAA6BH,SAA7B;AACApB,IAAIsB,SAAJ,CAAcD,OAAOE,IAArB,EAA0BF,MAA1B,E,CAEA;;AACA,OAAOG,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,MAAMC,QAAN,CAAeC,eAAf,GAA+B,IAA/B,C,CACA;;AACA1B,IAAI2B,SAAJ,CAAcH,KAAd,GAAoBA,KAApB,C,CAGA;;AACA,OAAOI,WAAP,MAAwB,cAAxB,C,CACA;;AACA5B,IAAIM,GAAJ,CAAQsB,WAAR,E,CACA;AACA;;AACA5B,IAAI6B,IAAJ,CAASC,OAAT,CAAiBC,IAAjB,GAAwB,wBAAxB,C,CACA;AACA;;AACA/B,IAAI6B,IAAJ,CAASC,OAAT,CAAiBE,WAAjB,GAA+B,IAA/B;AAOA,IAAIhC,GAAJ,CAAQ;AACNE,gBADM;AAEN+B,UAAQ;AAAA,WAAKC,EAAEjC,GAAF,CAAL;AAAA,GAFF;AAEgB;AACtBM,cAHM,CAGE;;AAHF,CAAR,EAIG4B,MAJH,CAIU,MAJV","sourceRoot":"c:\\Users\\web\\Desktop\\二次修改项目\\yunyou01\\vueui","sourcesContent":["import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\nimport'mint-ui/lib/style.css'\r\n\r\nVue.config.productionTip = false\r\n//5: 设置请求的根路径 \r\n\r\n\r\n//导入 MUI 的样式表， 和 Bootstrap 用法没有差别\r\nimport './lib/mui/css/mui.css'\r\n// 导入 MUI 的样式表，扩展图标样式，购物车图标\r\n// 还需要加载图标字体文件\r\nimport './lib/mui/css/icons-extra.css'\r\n\r\n//0.1:引入Vuex\r\nimport Vuex from \"vuex\"\r\n//0.2:注册Vuex组件\r\nVue.use(Vuex)\r\n//0.3:创建Vuex实例对象\r\nvar store=new Vuex.Store({\r\n   state:{\r\n     cartCount:0  //购物车中商品数量\r\n   },\r\n   mutations:{   //修改共享数据方法\r\n     increment(state,count){state.cartCount+=count},\r\n     substract(state){state.cartCount--},\r\n     clear(state){state.cartCount=0}\r\n   },\r\n   getters:{   //获取共享数据方法\r\n     optCartCount:function(state){\r\n       return state.cartCount;\r\n     }\r\n   }\r\n})\r\n//0.4:将Vuex对象注册Vue对象---见最后\r\n\r\n\r\n\r\n//1:引入mint-ui Header Button组件\r\nimport {Header,Swipe,SwipeItem,Button} from \"mint-ui\"\r\n//2.注册Header组件\r\nVue.component(Header.name,Header);\r\n//3:注册Swipe/SwipeItem/Button组件\r\nVue.component(Swipe.name,Swipe);\r\nVue.component(SwipeItem.name,SwipeItem);\r\nVue.component(Button.name,Button);\r\n\r\n//3.1:引入axios库(VueResource)\r\nimport axios from \"axios\"\r\n//3.2:跨域保存session值\r\naxios.defaults.withCredentials=true\r\n//3.3:注册组件\r\nVue.prototype.axios=axios\r\n\r\n\r\n//4:引入vue-resource 库\r\nimport VueResource from \"vue-resource\";\r\n//5:注册vue-resource 库\r\nVue.use(VueResource);\r\n//6:配置vue-resource常见属性\r\n//6.1:设置请求服务器根目录\r\nVue.http.options.root = \"http://127.0.0.1:3333/\";\r\n//6:全局设置post 时候表音的数据组织格式为 application/x-www-form-urlencoded\r\n//将提交数据进行转码操作 \r\nVue.http.options.emulateJSON = true;\r\n\r\n\r\n\r\n\r\n\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App),  //渲染     h->创建元素\r\n  store   //0.4：将Vuex对象注册到Vue实例\r\n}).$mount('#app')\r\n"]}]}